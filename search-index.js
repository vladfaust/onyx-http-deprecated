crystal_doc_search_index_callback({"repository_name":"github.com/onyxframework/http","body":"<a href=\"https://onyxframework.org\"><img width=\"100\" height=\"100\" src=\"https://onyxframework.org/img/logo.svg\"></a>\n\n# Onyx::HTTP\n\n[![Built with Crystal](https://img.shields.io/badge/built%20with-crystal-000000.svg?style=flat-square)](https://crystal-lang.org/)\n[![Travis CI build](https://img.shields.io/travis/onyxframework/http/master.svg?style=flat-square)](https://travis-ci.org/onyxframework/http)\n[![API docs](https://img.shields.io/badge/api_docs-online-brightgreen.svg?style=flat-square)](https://api.onyxframework.org/http)\n[![Latest release](https://img.shields.io/github/release/onyxframework/http.svg?style=flat-square)](https://github.com/onyxframework/http/releases)\n\nAn HTTP framework for [Crystal](https://crystal-lang.org).\n\n## Supporters ‚ù§Ô∏è\n\nThanks to all my patrons, I can continue working on beautiful Open Source Software! üôè\n\n[Lauri Jutila](https://github.com/ljuti), [Alexander Maslov](https://seendex.ru), Dainel Vera\n\n*You can become a patron too in exchange of prioritized support and other perks*\n\n<a href=\"https://www.patreon.com/vladfaust\"><img height=\"50\" src=\"https://onyxframework.org/img/patreon-button.svg\"></a>\n\n## About üëã\n\nOnyx::HTTP is a collection of [`HTTP::Handler`](https://crystal-lang.org/api/latest/HTTP/Handler.html)'s to use in web [Crystal](https://crystal-lang.org/) applications. It also includes a convenient [`HTTP::Server`](https://crystal-lang.org/api/latest/HTTP/Server.html) wrapper. Onyx::HTTP shard serves as a foundation for higher-level Onyx components, such as [Onyx::REST](https://github.com/onyxframework/rest), but it can definetely be used as a stand-alone library.\n\n## Installation üì•\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  onyx-http:\n    github: onyxframework/http\n    version: ~> 0.1.1\n```\n\nThis shard follows [Semantic Versioning v2.0.0](http://semver.org/), so check [releases](https://github.com/onyxframework/http/releases) and change the `version` accordingly. Please visit [github.com/crystal-lang/shards](https://github.com/crystal-lang/shards) to know more about Crystal shards.\n\n## Usage üíª\n\nOnyx::HTTP includes multiple useful [`HTTP::Handler`](https://crystal-lang.org/api/latest/HTTP/Handler.html)s and an [`HTTP::Server`](https://crystal-lang.org/api/latest/HTTP/Server.html) wrapper. If you don't know anything about the Crystal HTTP server, then check out its [official docs](https://crystal-lang.org/reference/overview/http_server.html) and [API](https://crystal-lang.org/api/latest/HTTP/Server.html) before continuing.\n\n### Simple server\n\nStart with a simple [`Onyx::HTTP::Server`](https://api.onyxframework.org/http/Onyx/HTTP/Server.html) example:\n\n```crystal\nrequire \"onyx-http\"\n\nserver = Onyx::HTTP::Server.new do |env|\n  env.response << \"Hello Onyx\"\nend\n\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000\nHello Onyx\n```\n\n![Screenshot #1](https://user-images.githubusercontent.com/7955682/52903116-5c4bd680-322a-11e9-9163-53edea029f89.png)\n\n### Logging\n\nWe'd like to see the actual request in the STDOUT. Use [`Onyx::HTTP::Logger`](https://api.onyxframework.org/http/Onyx/HTTP/Logger.html) for that:\n\n```crystal\nrequire \"onyx-http\"\n\nlogger = Onyx::HTTP::Logger.new\n\nserver = Onyx::HTTP::Server.new(logger) do |env|\n  env.response << \"Hello Onyx\"\nend\n\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000\nHello Onyx\n```\n\n![Screenshot #2](https://user-images.githubusercontent.com/7955682/52903118-5fdf5d80-322a-11e9-84b2-2658a0051d08.png)\n\n### Request meta\n\nIt's a good idea to add an ID to the request and also a time elapsed to process it for further analysis. There are [`Onyx::HTTP::RequestID`](https://api.onyxframework.org/http/Onyx/HTTP/RequestID.html) and [`Onyx::HTTP::ResponseTime`](https://api.onyxframework.org/http/Onyx/HTTP/ResponseTime.html) handlers:\n\n```crystal\nrequire \"onyx-http\"\n\nlogger = Onyx::HTTP::Logger.new\nrequest_id = Onyx::HTTP::RequestID.new\nresponse_time = Onyx::HTTP::ResponseTime.new\n\nserver = Onyx::HTTP::Server.new(response_time, request_id, logger) do |env|\n  env.response << \"Hello Onyx\"\nend\n\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000 -v\n* Rebuilt URL to: http://localhost:5000/\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 5000 (#0)\n> GET / HTTP/1.1\n> Host: localhost:5000\n> User-Agent: curl/7.47.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Connection: keep-alive\n< X-Request-ID: 14c0259b-c020-4c85-931c-556e1ff266da\n< X-Response-Time: 120\n< Content-Length: 10\n<\n* Connection #0 to host localhost left intact\nHello Onyx\n```\n\n![Screenshot #3](https://user-images.githubusercontent.com/7955682/52903120-6372e480-322a-11e9-9273-ca7bc478b32d.png)\n\n### CORS\n\nModern APIs usually require proper [CORS](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing) handling. It is achievable with [`Onyx::HTTP::CORS`](https://api.onyxframework.org/http/Onyx/HTTP/CORS.html):\n\n```crystal\nrequire \"onyx-http\"\n\nlogger = Onyx::HTTP::Logger.new\nrequest_id = Onyx::HTTP::RequestID.new\nresponse_time = Onyx::HTTP::ResponseTime.new\ncors = Onyx::HTTP::CORS.new\n\nserver = Onyx::HTTP::Server.new(response_time, request_id, logger, cors) do |env|\n  env.response << \"Hello Onyx\"\nend\n\nserver.bind_tcp(5000)\nserver.listen\n\n```\n\n```sh\n> curl http://localhost:5000 -v\n* Rebuilt URL to: http://localhost:5000/\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 5000 (#0)\n> GET / HTTP/1.1\n> Host: localhost:5000\n> User-Agent: curl/7.47.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Connection: keep-alive\n< X-Request-ID: af4ded9e-2f72-41aa-bac2-308b38198af6\n< Access-Control-Allow-Origin: *\n< X-Response-Time: 233\n< Content-Length: 10\n<\n* Connection #0 to host localhost left intact\nHello Onyx\n```\n\n### Routing\n\nAlmost every web application requires routing. It is quite simple with [`Onyx::HTTP::Router`](https://api.onyxframework.org/http/Onyx/HTTP/Router.html):\n\n```crystal\nrequire \"onyx-http\"\n\nlogger = Onyx::HTTP::Logger.new\nrequest_id = Onyx::HTTP::RequestID.new\nresponse_time = Onyx::HTTP::ResponseTime.new\n\nrouter = Onyx::HTTP::Router.new do\n  get \"/\" do |env|\n    env.response << \"Hello Onyx\"\n  end\n\n  post \"/echo\" do |env|\n    env.response << env.request.body.try &.gets_to_end\n  end\nend\n\nserver = Onyx::HTTP::Server.new(response_time, request_id, logger, router)\n\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000\nHello Onyx\n> curl -X POST -d \"Knock-knock\" http://localhost:5000/echo\nKnock-knock\n```\n\n![Screenshot #4](https://user-images.githubusercontent.com/7955682/52903121-68379880-322a-11e9-9d45-0517d9e29dda.png)\n\n### Rescuing\n\nBy default, an unhandled exception would halt the request processing, put the error backtrace into `STDERR` and print `500 Internal Server Error` into the response body. We can change this behaviour with [`Onyx::HTTP::Rescuer`](https://api.onyxframework.org/http/Onyx/HTTP/Rescuer.html).\n\nThis shard comes with [`Onyx::HTTP::Rescuers::Standard`](https://api.onyxframework.org/http/Onyx/HTTP/Rescuers/Standard.html), [`Onyx::HTTP::Rescuers::Silent`](https://api.onyxframework.org/http/Onyx/HTTP/Rescuers/Silent.html) and [`Onyx::HTTP::Rescuers::RouteNotFound`](https://api.onyxframework.org/http/Onyx/HTTP/Rescuers/RouteNotFound.html):\n\n```crystal\nrequire \"onyx-http\"\n\nlogger = Onyx::HTTP::Logger.new\nrequest_id = Onyx::HTTP::RequestID.new\nresponse_time = Onyx::HTTP::ResponseTime.new\nrescuer = Onyx::HTTP::Rescuers::Standard(Exception).new\nrouter_rescuer = Onyx::HTTP::Rescuers::RouteNotFound.new\n\nrouter = Onyx::HTTP::Router.new do\n  get \"/\" do |env|\n    env.response << \"Hello Onyx\"\n  end\n\n  post \"/echo\" do |env|\n    env.response << env.request.body.try &.gets_to_end\n  end\n\n  get \"/error\" do\n    raise \"Oops!\"\n  end\nend\n\nserver = Onyx::HTTP::Server.new(response_time, request_id, logger, rescuer, router_rescuer, router)\n\nserver.bind_tcp(5000)\nserver.listen\n```\n\n```sh\n> curl http://localhost:5000/error\n500 Internal Server Error\n> curl http://localhost:5000/unknown\n404 Route Not Found: GET /unknown\n```\n\n![Screenshot #5](https://user-images.githubusercontent.com/7955682/52903125-6c63b600-322a-11e9-908a-87d73948c24e.png)\n\n### Macros\n\nNow that you know how Onyx::HTTP works on the low-level, you'd probably want to reduce the amount of boilerplate code in your applications. We've got you covered! [**@onyxframework/onyx**](https://github.com/onyxframework/onyx) shard contains many top-level macros just for your convenience:\n\n```crystal\nrequire \"onyx/env\"\nrequire \"onyx/http\"\n\nOnyx.get \"/\" do |env|\n  env.response << \"Hello Onyx\"\nend\n\nOnyx.listen\n```\n\nThis example includes *all* the handlers listed above!\n\n```sh\n> curl http://localhost:5000 -v\n* Rebuilt URL to: http://localhost:5000/\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 5000 (#0)\n> GET / HTTP/1.1\n> Host: localhost:5000\n> User-Agent: curl/7.47.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Connection: keep-alive\n< X-Request-ID: 89bbea1c-26b8-4113-ab67-04279eb0fa13\n< Access-Control-Allow-Origin: *\n< X-Response-Time: 109\n< Content-Length: 12\n<\n* Connection #0 to host localhost left intact\nHello, Onyx!\n```\n\n![Screenshot #6](https://user-images.githubusercontent.com/7955682/52903126-6ff73d00-322a-11e9-8501-907d54a4f342.png)\n\nYou can easily modify the server's middleware:\n\n```crystal\nOnyx.listen do |handlers, server|\n  # This code is going to be injected right before server.listen\n  handlers.insert(1, MyCustomHandler.new)\nend\n```\n\n### Next steps\n\nAs said before in the about section, Onyx::HTTP is just a foundation for other Onyx components. You may now want to check [Onyx::REST](https://github.com/onyxframework/rest) for a scalable REST API framework!\n\nThe decent Onyx::HTTP API documentation is always available at <https://api.onyxframework.org/http>.\n\n## Community üç™\n\nThere are multiple places to talk about this particular shard and about other ones as well:\n\n* [Onyx::HTTP Gitter chat](https://gitter.im/onyxframework/http)\n* [Onyx Framework Gitter community](https://gitter.im/onyxframework)\n* [Vlad Faust Gitter community](https://gitter.im/vladfaust)\n* [Onyx Framework Twitter](https://twitter.com/onyxframework)\n* [Onyx Framework Telegram channel](https://telegram.me/onyxframework)\n\n## Support ‚ù§Ô∏è\n\nThis shard is maintained by me, [Vlad Faust](https://vladfaust.com), a passionate developer with years of programming and product experience. I love creating Open-Source and I want to be able to work full-time on Open-Source projects.\n\nI will do my best to answer your questions in the free communication channels above, but if you want prioritized support, then please consider becoming my patron. Your issues will be labeled with your patronage status, and if you have a sponsor tier, then you and your team be able to communicate with me in private or semi-private channels such as e-mail and [Twist](https://twist.com). There are other perks to consider, so please, don't hesistate to check my Patreon page:\n\n<a href=\"https://www.patreon.com/vladfaust\"><img height=\"50\" src=\"https://onyxframework.org/img/patreon-button.svg\"></a>\n\nYou could also help me a lot if you leave a star to this GitHub repository and spread the world about Crystal and Onyx! üì£\n\n## Contributing\n\n1. Fork it ( https://github.com/onyxframework/http/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'feat: some feature') using [Angular style commits](https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit)\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Vlad Faust](https://github.com/vladfaust) - creator and maintainer\n\n## Licensing\n\nThis software is licensed under [MIT License](LICENSE).\n\n[![Open Source Initiative](https://upload.wikimedia.org/wikipedia/commons/thumb/4/42/Opensource.svg/100px-Opensource.svg.png)](https://opensource.org/licenses/MIT)\n","program":{"html_id":"github.com/onyxframework/http/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/onyxframework/http","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/HTTP","path":"HTTP.html","kind":"module","full_name":"HTTP","name":"HTTP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-http/ext/http.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Extensions to the standard `HTTP` module.","summary":"<p>Extensions to the standard <code><a href=\"HTTP.html\">HTTP</a></code> module.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/HTTP/Request","path":"HTTP/Request.html","kind":"class","full_name":"HTTP::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/ext/http/request/id.cr","line_number":3,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/request/id.cr"},{"filename":"onyx-http/ext/http/request/path_params.cr","line_number":3,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/request/path_params.cr"},{"filename":"onyx-http/ext/http/request.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/request.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"Extensions to the standard `HTTP::Request` class.","summary":"<p>Extensions to the standard <code><a href=\"../HTTP/Request.html\">HTTP::Request</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"id-instance-method","html_id":"id-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id.not_nil!"}},{"id":"id=(id:String)-instance-method","html_id":"id=(id:String)-instance-method","name":"id=","doc":"A request ID. Can be set by `Onyx::REST::RequestID`.","summary":"<p>A request ID.</p>","abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"args_string":"(id : String)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/request/id.cr#L5","def":{"name":"id=","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = id"}},{"id":"id?:String?-instance-method","html_id":"id?:String?-instance-method","name":"id?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"id?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"path_params:Hash(String,String)-instance-method","html_id":"path_params:Hash(String,String)-instance-method","name":"path_params","doc":"A hash containing path params (extracted from the request's path).\nIt's automatically set when routing with `Onyx::REST::Router`, empty by default.\n\nFor example, request with path `\"/user/42/edit\"` is\nrouted with `put \"/user/:id/edit\"` will have `{\"id\" => \"42\"}` path params.\n\nNOTE: You must not modify this hash values directly (e.g. `req.path_params[\"foo\"] = \"bar\"`).\nTODO: Make this hash immutable.","summary":"<p>A hash containing path params (extracted from the request's path).</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/request/path_params.cr#L18","def":{"name":"path_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"@path_params"}},{"id":"path_params=(path_params:Hash(String,String))-instance-method","html_id":"path_params=(path_params:Hash(String,String))-instance-method","name":"path_params=","doc":"A hash containing path params (extracted from the request's path).\nIt's automatically set when routing with `Onyx::REST::Router`, empty by default.\n\nFor example, request with path `\"/user/42/edit\"` is\nrouted with `put \"/user/:id/edit\"` will have `{\"id\" => \"42\"}` path params.\n\nNOTE: You must not modify this hash values directly (e.g. `req.path_params[\"foo\"] = \"bar\"`).\nTODO: Make this hash immutable.","summary":"<p>A hash containing path params (extracted from the request's path).</p>","abstract":false,"args":[{"name":"path_params","doc":null,"default_value":"","external_name":"path_params","restriction":"Hash(String, String)"}],"args_string":"(path_params : Hash(String, String))","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/request/path_params.cr#L22","def":{"name":"path_params=","args":[{"name":"path_params","doc":null,"default_value":"","external_name":"path_params","restriction":"Hash(String, String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@path_params = path_params"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/HTTP/Server","path":"HTTP/Server.html","kind":"class","full_name":"HTTP::Server","name":"Server","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/ext/http/server.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/server.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Server","kind":"class","full_name":"Onyx::HTTP::Server","name":"Server"}],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/HTTP","kind":"module","full_name":"HTTP","name":"HTTP"},"doc":"Extensions to the standard `HTTP::Server` class.","summary":"<p>Extensions to the standard <code><a href=\"../HTTP/Server.html\">HTTP::Server</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/HTTP/Server/Response","path":"HTTP/Server/Response.html","kind":"class","full_name":"HTTP::Server::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"github.com/onyxframework/http/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/ext/http/server/response/error.cr","line_number":3,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/server/response/error.cr"},{"filename":"onyx-http/ext/http/server/response.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/server/response.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},"doc":"Extensions to the standard `HTTP::Server::Response` class.","summary":"<p>Extensions to the standard <code><a href=\"../../HTTP/Server/Response.html\">HTTP::Server::Response</a></code> class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"error:Exception?-instance-method","html_id":"error:Exception?-instance-method","name":"error","doc":"A rescued error which is likely to be put into the response output.","summary":"<p>A rescued error which is likely to be put into the response output.</p>","abstract":false,"args":[],"args_string":" : Exception?","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/server/response/error.cr#L7","def":{"name":"error","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Exception | ::Nil","visibility":"Public","body":"@error"}},{"id":"error=(error:Exception?)-instance-method","html_id":"error=(error:Exception?)-instance-method","name":"error=","doc":"A rescued error which is likely to be put into the response output.","summary":"<p>A rescued error which is likely to be put into the response output.</p>","abstract":false,"args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception | ::Nil"}],"args_string":"(error : Exception?)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/ext/http/server/response/error.cr#L11","def":{"name":"error=","args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"Exception | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@error = error"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/onyxframework/http/Onyx","path":"Onyx.html","kind":"module","full_name":"Onyx","name":"Onyx","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-http.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Enjoy the performance üí™\n\nVisit [onyxframework.org](https://onyxframework.org)","summary":"<p>Enjoy the performance üí™</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP","path":"Onyx/HTTP.html","kind":"module","full_name":"Onyx::HTTP","name":"HTTP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-http.cr","line_number":5,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http.cr"},{"filename":"onyx-http/cors.cr","line_number":3,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/cors.cr"},{"filename":"onyx-http/logger.cr","line_number":8,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/logger.cr"},{"filename":"onyx-http/request_id.cr","line_number":6,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/request_id.cr"},{"filename":"onyx-http/rescuers/silent.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/silent.cr"},{"filename":"onyx-http/router.cr","line_number":8,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr"},{"filename":"onyx-http/rescuers/route_not_found.cr","line_number":4,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/route_not_found.cr"},{"filename":"onyx-http/rescuers/standard.cr","line_number":7,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr"},{"filename":"onyx-http/response_time.cr","line_number":3,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/response_time.cr"},{"filename":"onyx-http/server.cr","line_number":3,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx","kind":"module","full_name":"Onyx","name":"Onyx"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/CORS","path":"Onyx/HTTP/CORS.html","kind":"class","full_name":"Onyx::HTTP::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/cors.cr","line_number":9,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/cors.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"Extracted from [kemalyst](https://github.com/kemalyst/kemalyst/blob/master/src/kemalyst/handler/cors.cr) (MIT licensed).\n\nCopyright (c) 2016 dru.jensen\n\nSee [CORS on Wiki](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing).","summary":"<p>Extracted from <a href=\"https://github.com/kemalyst/kemalyst/blob/master/src/kemalyst/handler/cors.cr\" target=\"_blank\">kemalyst</a> (MIT licensed).</p>","class_methods":[],"constructors":[{"id":"new(*,allow_origin=&quot;*&quot;,allow_headers=[&quot;accept&quot;,&quot;content-type&quot;]of::String,allow_methods=[&quot;GET&quot;,&quot;HEAD&quot;,&quot;POST&quot;,&quot;DELETE&quot;,&quot;OPTIONS&quot;,&quot;PUT&quot;,&quot;PATCH&quot;]of::String,allow_credentials=false,max_age=0)-class-method","html_id":"new(*,allow_origin=&amp;quot;*&amp;quot;,allow_headers=[&amp;quot;accept&amp;quot;,&amp;quot;content-type&amp;quot;]of::String,allow_methods=[&amp;quot;GET&amp;quot;,&amp;quot;HEAD&amp;quot;,&amp;quot;POST&amp;quot;,&amp;quot;DELETE&amp;quot;,&amp;quot;OPTIONS&amp;quot;,&amp;quot;PUT&amp;quot;,&amp;quot;PATCH&amp;quot;]of::String,allow_credentials=false,max_age=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"allow_origin","doc":null,"default_value":"\"*\"","external_name":"allow_origin","restriction":""},{"name":"allow_headers","doc":null,"default_value":"[\"accept\", \"content-type\"] of ::String","external_name":"allow_headers","restriction":""},{"name":"allow_methods","doc":null,"default_value":"[\"GET\", \"HEAD\", \"POST\", \"DELETE\", \"OPTIONS\", \"PUT\", \"PATCH\"] of ::String","external_name":"allow_methods","restriction":""},{"name":"allow_credentials","doc":null,"default_value":"false","external_name":"allow_credentials","restriction":""},{"name":"max_age","doc":null,"default_value":"0","external_name":"max_age","restriction":""}],"args_string":"(*, allow_origin = <span class=\"s\">&quot;*&quot;</span>, allow_headers = [<span class=\"s\">&quot;accept&quot;</span>, <span class=\"s\">&quot;content-type&quot;</span>] <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, allow_methods = [<span class=\"s\">&quot;GET&quot;</span>, <span class=\"s\">&quot;HEAD&quot;</span>, <span class=\"s\">&quot;POST&quot;</span>, <span class=\"s\">&quot;DELETE&quot;</span>, <span class=\"s\">&quot;OPTIONS&quot;</span>, <span class=\"s\">&quot;PUT&quot;</span>, <span class=\"s\">&quot;PATCH&quot;</span>] <span class=\"k\">of</span> <span class=\"t\">::</span><span class=\"t\">String</span>, allow_credentials = <span class=\"n\">false</span>, max_age = <span class=\"n\">0</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/cors.cr#L12","def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"allow_origin","doc":null,"default_value":"\"*\"","external_name":"allow_origin","restriction":""},{"name":"allow_headers","doc":null,"default_value":"[\"accept\", \"content-type\"] of ::String","external_name":"allow_headers","restriction":""},{"name":"allow_methods","doc":null,"default_value":"[\"GET\", \"HEAD\", \"POST\", \"DELETE\", \"OPTIONS\", \"PUT\", \"PATCH\"] of ::String","external_name":"allow_methods","restriction":""},{"name":"allow_credentials","doc":null,"default_value":"false","external_name":"allow_credentials","restriction":""},{"name":"max_age","doc":null,"default_value":"0","external_name":"max_age","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(allow_origin: allow_origin, allow_headers: allow_headers, allow_methods: allow_methods, allow_credentials: allow_credentials, max_age: max_age)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Logger","path":"Onyx/HTTP/Logger.html","kind":"class","full_name":"Onyx::HTTP::Logger","name":"Logger","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/logger.cr","line_number":20,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/logger.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"Logs requests colorfully into specified standard *logger*.\nIt also logs the `::HTTP::Request#id` if it's present.\nShould be put in the beginning of the middleware stack.\n\n```\nlogger = Onyx::HTTP::Logger.new\n\n#   INFO -- :     GET /users 200 102Œºs\n#   INFO -- :     GET /favicon.ico 404 52Œºs\n#   INFO -- :    POST /users 201 3.74ms\n```","summary":"<p>Logs requests colorfully into specified standard <em>logger</em>.</p>","class_methods":[],"constructors":[{"id":"new(logger:::Logger=::Logger.new(STDOUT),*,severity:::Logger::Severity=::Logger::INFO,query:Bool=true)-class-method","html_id":"new(logger:::Logger=::Logger.new(STDOUT),*,severity:::Logger::Severity=::Logger::INFO,query:Bool=true)-class-method","name":"new","doc":"Set *query* to `false` to turn off logging requests' queries.","summary":"<p>Set <em>query</em> to <code>false</code> to turn off logging requests' queries.</p>","abstract":false,"args":[{"name":"logger","doc":null,"default_value":"::Logger.new(STDOUT)","external_name":"logger","restriction":"::Logger"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"severity","doc":null,"default_value":"::Logger::INFO","external_name":"severity","restriction":"::Logger::Severity"},{"name":"query","doc":null,"default_value":"true","external_name":"query","restriction":"Bool"}],"args_string":"(logger : ::Logger = <span class=\"t\">::</span><span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDOUT</span>), *, severity : ::Logger::Severity = <span class=\"t\">::</span><span class=\"t\">Logger</span><span class=\"t\">::</span><span class=\"t\">INFO</span>, query : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/logger.cr#L33","def":{"name":"new","args":[{"name":"logger","doc":null,"default_value":"::Logger.new(STDOUT)","external_name":"logger","restriction":"::Logger"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"severity","doc":null,"default_value":"::Logger::INFO","external_name":"severity","restriction":"::Logger::Severity"},{"name":"query","doc":null,"default_value":"true","external_name":"query","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(logger, severity: severity, query: query)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/logger.cr#L41","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"started_at = Time.monotonic\nif context.request.id?\n  request_id = \"[#{context.request.id[0...8]}]\".colorize(:dark_gray)\nend\nwebsocket = context.request.headers.includes_word?(\"Upgrade\", \"Websocket\")\nif websocket\n  method = ((\"WS\".rjust(7)).colorize(color(100))).mode(:bold)\n  progess = \"upgrading\".colorize(:dark_gray)\n  resource = context.request.path\n  if resource.size < 2\n  else\n    resource = resource.rstrip('/')\n  end\n  if @query && (query = context.request.query)\n    resource = resource + \"?#{query}\"\n  end\n  resource = resource.colorize(color(100))\n  @logger.log(@severity, \"#{request_id}#{method} #{resource} #{progess}\")\nend\nbegin\n  call_next(context)\nensure\n  color = color(context.response.status_code)\n  method = (((websocket ? \"WS\" : context.request.method).rjust(7)).colorize(color)).mode(:bold)\n  status_code = (context.response.status_code.colorize(color)).mode(:bold)\n  resource = context.request.path\n  if resource.size < 2\n  else\n    resource = resource.rstrip('/')\n  end\n  if @query && (query = context.request.query)\n    resource = resource + \"?#{query}\"\n  end\n  resource = resource.colorize(color)\n  @logger.log(@severity, \"#{request_id}#{method} #{resource} #{status_code} #{(TimeFormat.auto(Time.monotonic - started_at)).colorize(:dark_gray)}\")\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/RequestID","path":"Onyx/HTTP/RequestID.html","kind":"class","full_name":"Onyx::HTTP::RequestID","name":"RequestID","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/request_id.cr","line_number":9,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/request_id.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"Sets `::HTTP::Request#id` and `\"X-Request-ID\"` header to a random `UUID` string.\nIf a request has an ID, it's logged in `Logger` and `Rescuers::Standard` handlers.","summary":"<p>Sets <code><a href=\"../../HTTP/Request.html\">::HTTP::Request</a>#id</code> and <code>\"X-Request-ID\"</code> header to a random <code>UUID</code> string.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/request_id.cr#L12","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"id = UUID.random.to_s\ncontext.request.id = id\ncontext.response.headers[\"X-Request-ID\"] = id\ncall_next(context)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuer","path":"Onyx/HTTP/Rescuer.html","kind":"module","full_name":"Onyx::HTTP::Rescuer(T)","name":"Rescuer","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"locations":[{"filename":"onyx-http/rescuer.cr","line_number":9,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/Silent","kind":"class","full_name":"Onyx::HTTP::Rescuers::Silent(T)","name":"Silent"},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/Standard","kind":"class","full_name":"Onyx::HTTP::Rescuers::Standard(T)","name":"Standard"}],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"Rescues `T`. Firstly calls `#handle` to handle the error (e.g. log it).\nThen if `#next_handler` is present, calls `#before_next_handler` and then the next handler itself.\nOtherwise calls `#fallback`.\n\nSee `Rescuers::Standard` and `Rescuers::Silent`.","summary":"<p>Rescues <code>T</code>.</p>","class_methods":[],"constructors":[{"id":"new(next_handler:::HTTP::Handler?=nil)-class-method","html_id":"new(next_handler:::HTTP::Handler?=nil)-class-method","name":"new","doc":"Initialize with a *next_handler* to call when a error is rescued.","summary":"<p>Initialize with a <em>next_handler</em> to call when a error is rescued.</p>","abstract":false,"args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"args_string":"(next_handler : ::HTTP::Handler? = <span class=\"n\">nil</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L16","def":{"name":"new","args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(next_handler)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"before_next_handler(context:HTTP::Server::Context,error:T)-instance-method","html_id":"before_next_handler(context:HTTP::Server::Context,error:T)-instance-method","name":"before_next_handler","doc":"Called only if `#next_handler` is set just before it's called.\nIt does `context.response.error = error` by default.","summary":"<p>Called only if <code><a href=\"../../Onyx/HTTP/Rescuer.html#next_handler%3A%3A%3AHTTP%3A%3AHandler%3F-instance-method\">#next_handler</a></code> is set just before it's called.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"::HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"args_string":"(context : HTTP::Server::Context, error : T)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L38","def":{"name":"before_next_handler","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"::HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.response.error = error"}},{"id":"fallback(context:HTTP::Server::Context,error:T)-instance-method","html_id":"fallback(context:HTTP::Server::Context,error:T)-instance-method","name":"fallback","doc":"Called if no `#next_handler` is set.","summary":"<p>Called if no <code><a href=\"../../Onyx/HTTP/Rescuer.html#next_handler%3A%3A%3AHTTP%3A%3AHandler%3F-instance-method\">#next_handler</a></code> is set.</p>","abstract":true,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"::HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"args_string":"(context : HTTP::Server::Context, error : T)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L43","def":{"name":"fallback","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"::HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"handle(context:HTTP::Server::Context,error:T)-instance-method","html_id":"handle(context:HTTP::Server::Context,error:T)-instance-method","name":"handle","doc":"Process the error before further handling. A good example is logging it.","summary":"<p>Process the error before further handling.</p>","abstract":true,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"::HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"args_string":"(context : HTTP::Server::Context, error : T)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L34","def":{"name":"handle","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"::HTTP::Server::Context"},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"next_handler:::HTTP::Handler?-instance-method","html_id":"next_handler:::HTTP::Handler?-instance-method","name":"next_handler","doc":"A handler to call when a error is rescued. If it's missing, calls `#fallback`.","summary":"<p>A handler to call when a error is rescued.</p>","abstract":false,"args":[],"args_string":" : ::HTTP::Handler?","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L15","def":{"name":"next_handler","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::HTTP::Handler | ::Nil","visibility":"Public","body":"@next_handler"}},{"id":"next_handler=(next_handler:::HTTP::Handler?)-instance-method","html_id":"next_handler=(next_handler:::HTTP::Handler?)-instance-method","name":"next_handler=","doc":"A handler to call when a error is rescued. If it's missing, calls `#fallback`.","summary":"<p>A handler to call when a error is rescued.</p>","abstract":false,"args":[{"name":"next_handler","doc":null,"default_value":"","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"args_string":"(next_handler : ::HTTP::Handler?)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L19","def":{"name":"next_handler=","args":[{"name":"next_handler","doc":null,"default_value":"","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@next_handler = next_handler"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers","path":"Onyx/HTTP/Rescuers.html","kind":"module","full_name":"Onyx::HTTP::Rescuers","name":"Rescuers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"onyx-http/rescuers/silent.cr","line_number":6,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/silent.cr"},{"filename":"onyx-http/rescuers/route_not_found.cr","line_number":6,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/route_not_found.cr"},{"filename":"onyx-http/rescuers/standard.cr","line_number":9,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"HTTP handlers which rescue errors.","summary":"<p>HTTP handlers which rescue errors.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/RouteNotFound","path":"Onyx/HTTP/Rescuers/RouteNotFound.html","kind":"class","full_name":"Onyx::HTTP::Rescuers::RouteNotFound","name":"RouteNotFound","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/Silent","kind":"class","full_name":"Onyx::HTTP::Rescuers::Silent","name":"Silent"},"ancestors":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/Silent","kind":"class","full_name":"Onyx::HTTP::Rescuers::Silent","name":"Silent"},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuer","kind":"module","full_name":"Onyx::HTTP::Rescuer","name":"Rescuer"},{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/rescuers/route_not_found.cr","line_number":10,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/route_not_found.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers","kind":"module","full_name":"Onyx::HTTP::Rescuers","name":"Rescuers"},"doc":"A rescuer which rescues `Router::RouteNotFoundError` and passes it\nto the `#next_handler` if it's present,\notherwise prints `\"404 Route Not Found: METHOD /path\"` into the response body.","summary":"<p>A rescuer which rescues <code><a href=\"../../../Onyx/HTTP/Router/RouteNotFoundError.html\">Router::RouteNotFoundError</a></code> and passes it to the <code>#next_handler</code> if it's present, otherwise prints <code>\"404 Route Not Found: METHOD /path\"</code> into the response body.</p>","class_methods":[],"constructors":[{"id":"new(next_handler:::HTTP::Handler?=nil)-class-method","html_id":"new(next_handler:::HTTP::Handler?=nil)-class-method","name":"new","doc":"Initialize with a *next_handler* to call when a error is rescued.","summary":"<p>Initialize with a <em>next_handler</em> to call when a error is rescued.</p>","abstract":false,"args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"args_string":"(next_handler : ::HTTP::Handler? = <span class=\"n\">nil</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L16","def":{"name":"new","args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(next_handler)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"fallback(context,error)-instance-method","html_id":"fallback(context,error)-instance-method","name":"fallback","doc":"Print `\"404 Route Not Found: METHOD /path\"` into the response body.","summary":"<p>Print <code>\"404 Route Not Found: METHOD /path\"</code> into the response body.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"args_string":"(context, error)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/route_not_found.cr#L12","def":{"name":"fallback","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.response.status_code = 404\n(context.response << \"404 \") << error.message\n"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/Silent","path":"Onyx/HTTP/Rescuers/Silent.html","kind":"class","full_name":"Onyx::HTTP::Rescuers::Silent(T)","name":"Silent","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuer","kind":"module","full_name":"Onyx::HTTP::Rescuer","name":"Rescuer"},{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/rescuers/silent.cr","line_number":9,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/silent.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuer","kind":"module","full_name":"Onyx::HTTP::Rescuer","name":"Rescuer"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/RouteNotFound","kind":"class","full_name":"Onyx::HTTP::Rescuers::RouteNotFound","name":"RouteNotFound"}],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers","kind":"module","full_name":"Onyx::HTTP::Rescuers","name":"Rescuers"},"doc":"A silent rescuer which passes the error to the `#next_handler` if it's present,\notherwise prints `\"500 Internal Server Error\"` into the response body.","summary":"<p>A silent rescuer which passes the error to the <code>#next_handler</code> if it's present, otherwise prints <code>\"500 Internal <a href=\"../../../Onyx/HTTP/Server.html\">Server</a> Error\"</code> into the response body.</p>","class_methods":[],"constructors":[{"id":"new(next_handler:::HTTP::Handler?=nil)-class-method","html_id":"new(next_handler:::HTTP::Handler?=nil)-class-method","name":"new","doc":"Initialize with a *next_handler* to call when a error is rescued.","summary":"<p>Initialize with a <em>next_handler</em> to call when a error is rescued.</p>","abstract":false,"args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"args_string":"(next_handler : ::HTTP::Handler? = <span class=\"n\">nil</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuer.cr#L16","def":{"name":"new","args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Silent(T).allocate\n_.initialize(next_handler)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"fallback(context,error)-instance-method","html_id":"fallback(context,error)-instance-method","name":"fallback","doc":"Print `\"500 Internal Server Error\"` into the response body.","summary":"<p>Print <code>\"500 Internal <a href=\"../../../Onyx/HTTP/Server.html\">Server</a> Error\"</code> into the response body.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"args_string":"(context, error)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/silent.cr#L18","def":{"name":"fallback","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.response.status_code = 500\ncontext.response << \"500 Internal Server Error\"\n"}},{"id":"handle(context,error)-instance-method","html_id":"handle(context,error)-instance-method","name":"handle","doc":"Do nothing.","summary":"<p>Do nothing.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"args_string":"(context, error)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/silent.cr#L13","def":{"name":"handle","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers/Standard","path":"Onyx/HTTP/Rescuers/Standard.html","kind":"class","full_name":"Onyx::HTTP::Rescuers::Standard(T)","name":"Standard","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuer","kind":"module","full_name":"Onyx::HTTP::Rescuer","name":"Rescuer"},{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/rescuers/standard.cr","line_number":46,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuer","kind":"module","full_name":"Onyx::HTTP::Rescuer","name":"Rescuer"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Rescuers","kind":"module","full_name":"Onyx::HTTP::Rescuers","name":"Rescuers"},"doc":"A generic handler which rescues all `T`s and logs them colorfully into a standard `::Logger`.\nIt sets `::HTTP::Server::Response#error` to the error instance in `#handle` and\nthen calls the `#next_handler` if it's present, otherwise prints the\n`\"500 Internal Server Error\"` message into the response body.\n\nIt also logs the `::HTTP::Request#id` if it's present.\nShould be put after `::HTTP::Logger` in the stack.\n\nNOTE: It also prints `\"500 Internal Server Error\"` when route is not found, because the `Router`\nraises `Router::RouteNotFoundError`, which is a simple `Exception`. You should put\n`Rescuers::RouteNotFound` *after* standard rescuer as well.\n\n```\n# This stack will print \"500 Internal Server Error\" into the response body\n# if an unhandled error is raised during the processing,\n# or \"404 Route Not Found\" on unknown URL path\n#\n\nlogger = Onyx::HTTP::Logger.new\nrescuer = Onyx::HTTP::Rescuers::Standard(Exception).new\nrouter_rescuer = Onyx::HTTP::Rescuers::RouteNotFound.new\nrouter = Onyx::HTTP::Router.new\nhandlers = [logger, rescuer, router_rescuer, router]\n```\n\n```\n# This stack will call the *renderer* instead of printing into the response body\n#\n\nlogger = Onyx::HTTP::Logger.new\nrenderer = Onyx::REST::Renderers::JSON.new\nrescuer = Onyx::HTTP::Rescuers::Standard.new(renderer)\nrouter_rescuer = Onyx::HTTP::Rescuers::RouteNotFound.new(renderer)\nrouter = Onyx::HTTP::Router.new\nhandlers = [logger, rescuer, router_rescuer, router, renderer]\n```","summary":"<p>A generic handler which rescues all <code>T</code>s and logs them colorfully into a standard <code>::Logger</code>.</p>","class_methods":[],"constructors":[{"id":"new(next_handler:::HTTP::Handler?=nil,*,logger:::Logger=::Logger.new(STDERR),verbose:Bool=true)-class-method","html_id":"new(next_handler:::HTTP::Handler?=nil,*,logger:::Logger=::Logger.new(STDERR),verbose:Bool=true)-class-method","name":"new","doc":"Set *verbose* to `false` to turn off logging errors' backtraces.","summary":"<p>Set <em>verbose</em> to <code>false</code> to turn off logging errors' backtraces.</p>","abstract":false,"args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"::Logger.new(STDERR)","external_name":"logger","restriction":"::Logger"},{"name":"verbose","doc":null,"default_value":"true","external_name":"verbose","restriction":"Bool"}],"args_string":"(next_handler : ::HTTP::Handler? = <span class=\"n\">nil</span>, *, logger : ::Logger = <span class=\"t\">::</span><span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDERR</span>), verbose : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr#L53","def":{"name":"new","args":[{"name":"next_handler","doc":null,"default_value":"nil","external_name":"next_handler","restriction":"::HTTP::Handler | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"logger","doc":null,"default_value":"::Logger.new(STDERR)","external_name":"logger","restriction":"::Logger"},{"name":"verbose","doc":null,"default_value":"true","external_name":"verbose","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Standard(T).allocate\n_.initialize(next_handler, logger: logger, verbose: verbose)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"fallback(context,error)-instance-method","html_id":"fallback(context,error)-instance-method","name":"fallback","doc":"Print `\"500 Internal Server Error\"` into the response body.","summary":"<p>Print <code>\"500 Internal <a href=\"../../../Onyx/HTTP/Server.html\">Server</a> Error\"</code> into the response body.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"args_string":"(context, error)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr#L81","def":{"name":"fallback","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.response.status_code = 500\ncontext.response << \"500 Internal Server Error\"\n"}},{"id":"handle(context,error)-instance-method","html_id":"handle(context,error)-instance-method","name":"handle","doc":"Log the *error* into the `#logger`.","summary":"<p>Log the <em>error</em> into the <code><a href=\"../../../Onyx/HTTP/Rescuers/Standard.html#logger%3A%3A%3ALogger-instance-method\">#logger</a></code>.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"args_string":"(context, error)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr#L63","def":{"name":"handle","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""},{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\nif id = context.request.id?\n  io << (\"[#{id[0...8]}] \".colorize(:dark_gray))\nend\nio << (((\" ERROR \".rjust(7)).colorize.mode(:bold)).back(:red))\n(io << \" \") << (error.message || \"<Empty message error>\")\nif @verbose\n  (io << \"\\n\\n\") << (error.inspect_with_backtrace.colorize(:light_gray))\nend\n@logger.error(io.to_s)\n"}},{"id":"logger:::Logger-instance-method","html_id":"logger:::Logger-instance-method","name":"logger","doc":"A `Logger` to log to. Can be changed in runtime.","summary":"<p>A <code><a href=\"../../../Onyx/HTTP/Logger.html\">Logger</a></code> to log to.</p>","abstract":false,"args":[],"args_string":" : ::Logger","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr#L52","def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Logger","visibility":"Public","body":"@logger"}},{"id":"logger=(logger:::Logger)-instance-method","html_id":"logger=(logger:::Logger)-instance-method","name":"logger=","doc":"A `Logger` to log to. Can be changed in runtime.","summary":"<p>A <code><a href=\"../../../Onyx/HTTP/Logger.html\">Logger</a></code> to log to.</p>","abstract":false,"args":[{"name":"logger","doc":null,"default_value":"","external_name":"logger","restriction":"::Logger"}],"args_string":"(logger : ::Logger)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/rescuers/standard.cr#L56","def":{"name":"logger=","args":[{"name":"logger","doc":null,"default_value":"","external_name":"logger","restriction":"::Logger"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger = logger"}}],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/ResponseTime","path":"Onyx/HTTP/ResponseTime.html","kind":"class","full_name":"Onyx::HTTP::ResponseTime","name":"ResponseTime","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/response_time.cr","line_number":6,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/response_time.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"Sets `\"X-Response-Time\"` header to the integer amount of **microseconds** elapsed\nto process this request. It is expected to be placed in the very beginning of the middleware.","summary":"<p>Sets <code>\"X-Response-Time\"</code> header to the integer amount of <strong>microseconds</strong> elapsed to process this request.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/response_time.cr#L9","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"elapsed = Time.measure do\n  call_next(context)\nend\ncontext.response.headers[\"X-Response-Time\"] = (elapsed.total_milliseconds * 1000).to_i64.to_s\n"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Router","path":"Onyx/HTTP/Router.html","kind":"class","full_name":"Onyx::HTTP::Router","name":"Router","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/router.cr","line_number":32,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/onyxframework/http/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"Routes a request's path, then updates extracted path params to `::HTTP::Request#path_params`,\nexecutes the matching proc and calls the next handler if it's present.\n\nRaises `RouteNotFoundError` if no route is found for the URL path,\nso it should be with a `Rescuer` in the stack.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  get \"/\" do |env|\n    env.response << \"Hello world!\"\n  end\n\n  ws \"/\" do |socket, env|\n    socket.on_message do |message|\n      # ...\n    end\n  end\nend\n\nrouter_rescuer = Onyx::HTTP::Rescuers::RouteNotFound.new\n\nserver = Onyx::HTTP::Server.new([router_rescuer, router])\n```","summary":"<p>Routes a request's path, then updates extracted path params to <code><a href=\"../../HTTP/Request.html\">::HTTP::Request</a>#path_params</code>, executes the matching proc and calls the next handler if it's present.</p>","class_methods":[],"constructors":[{"id":"new(&block)-class-method","html_id":"new(&amp;block)-class-method","name":"new","doc":"Initialize a new router and yield it. You should then define routes in the *&block*.\n\n```\n# The simplest router\nrouter = Onyx::HTTP::Router.new do\n  get \"/\" do |env|\n    env.response << \"Hello world!\"\n  end\nend\n```","summary":"<p>Initialize a new router and yield it.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L53","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = new\nwith instance yield\ninstance\n"}}],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":"Lookup for a route, update `context.request.path_params` and call the matching proc,\nraising `RouteNotFound` otherwise. Calls the next handler if it's present.","summary":"<p>Lookup for a route, update <code>context.request.path_params</code> and call the matching proc, raising <code>RouteNotFound</code> otherwise.</p>","abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L61","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if context.request.headers.includes_word?(\"Upgrade\", \"Websocket\")\n  path = \"/ws\" + (context.request.path.rstrip('/'))\n  result = lookup(path)\nelse\n  path = (\"/\" + context.request.method.downcase) + (context.request.path.rstrip('/'))\n  result = lookup(path)\nend\nif proc = result.payload\n  if params = result.params\n    context.request.path_params = params\n  end\n  proc.call(context)\n  if self.next\n    call_next(context)\n  else\n    context.response.error = nil\n  end\nelse\n  raise(RouteNotFoundError.new(context))\nend\n"}},{"id":"delete(path,&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"delete(path,&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"delete","doc":"Draw a route for *path* with `DELETE` method.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  delete \"/bar\" do |env|\n    env.response << \"Hello from DELETE /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>DELETE</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L116","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"on(path, [\"delete\"], &proc)"}},{"id":"draw(&block)-instance-method","html_id":"draw(&amp;block)-instance-method","name":"draw","doc":"Yield `with` self.\n\n```\nrouter.draw do\n  post \"/\" { }\n  get \"/\" { }\nend\n```","summary":"<p>Yield <code>with</code> self.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L97","def":{"name":"draw","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"with self yield"}},{"id":"get(path,&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"get(path,&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"get","doc":"Draw a route for *path* with `GET` method.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  get \"/bar\" do |env|\n    env.response << \"Hello from GET /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>GET</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L116","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"on(path, [\"get\"], &proc)"}},{"id":"on(path,methods:Array(String),&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"on(path,methods:Array(String),&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"on","doc":"Draw a route for *path* and *methods*.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  on \"/foo\", methods: %w(get post) do |env|\n    env.response << \"Hello from #{env.request.method} /foo!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> and <em>methods</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"methods","doc":null,"default_value":"","external_name":"methods","restriction":"Array(String)"}],"args_string":"(path, methods : Array(String), &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L110","def":{"name":"on","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"methods","doc":null,"default_value":"","external_name":"methods","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"methods.map(&.downcase).each do |method|\n  add((\"/\" + method) + path, proc)\nend"}},{"id":"options(path,&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"options(path,&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"options","doc":"Draw a route for *path* with `OPTIONS` method.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  options \"/bar\" do |env|\n    env.response << \"Hello from OPTIONS /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>OPTIONS</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L116","def":{"name":"options","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"on(path, [\"options\"], &proc)"}},{"id":"patch(path,&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"patch(path,&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"patch","doc":"Draw a route for *path* with `PATCH` method.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  patch \"/bar\" do |env|\n    env.response << \"Hello from PATCH /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>PATCH</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L116","def":{"name":"patch","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"on(path, [\"patch\"], &proc)"}},{"id":"post(path,&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"post(path,&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"post","doc":"Draw a route for *path* with `POST` method.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  post \"/bar\" do |env|\n    env.response << \"Hello from POST /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>POST</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L116","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"on(path, [\"post\"], &proc)"}},{"id":"put(path,&proc:HTTP::Server::Context->Nil)-instance-method","html_id":"put(path,&amp;proc:HTTP::Server::Context-&gt;Nil)-instance-method","name":"put","doc":"Draw a route for *path* with `PUT` method.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  put \"/bar\" do |env|\n    env.response << \"Hello from PUT /bar!\"\n  end\nend\n```","summary":"<p>Draw a route for <em>path</em> with <code>PUT</code> method.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L116","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"on(path, [\"put\"], &proc)"}},{"id":"ws(path,&proc:::HTTP::WebSocket,HTTP::Server::Context->Nil)-instance-method","html_id":"ws(path,&amp;proc:::HTTP::WebSocket,HTTP::Server::Context-&gt;Nil)-instance-method","name":"ws","doc":"Draw a WebSocket route for *path*.\n\nA request is currently determined as websocket by `\"Upgrade\": \"Websocket\"` header.\n\n```\nrouter = Onyx::HTTP::Router.new do\n  ws \"/foo/:bar\" do |socket, env|\n    socket.send(\"Hello WS!\")\n  end\nend\n```","summary":"<p>Draw a WebSocket route for <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &proc : ::HTTP::WebSocket, HTTP::Server::Context -> Nil)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L142","def":{"name":"ws","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"proc","doc":null,"default_value":"","external_name":"proc","restriction":"(::HTTP::WebSocket, ::HTTP::Server::Context -> Nil)"},"return_type":"","visibility":"Public","body":"add(\"/ws\" + path, ::HTTP::WebSocketHandler.new(&proc))"}}],"macros":[],"types":[{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Router/DuplicateRouteError","path":"Onyx/HTTP/Router/DuplicateRouteError.html","kind":"class","full_name":"Onyx::HTTP::Router::DuplicateRouteError","name":"DuplicateRouteError","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/onyxframework/http/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/router.cr","line_number":147,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Router","kind":"class","full_name":"Onyx::HTTP::Router","name":"Router"},"doc":"Raised if a duplicate route is found.","summary":"<p>Raised if a duplicate route is found.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"route:String-instance-method","html_id":"route:String-instance-method","name":"route","doc":"The route which caused the error.","summary":"<p>The route which caused the error.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L151","def":{"name":"route","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@route"}}],"macros":[],"types":[]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Router/RouteNotFoundError","path":"Onyx/HTTP/Router/RouteNotFoundError.html","kind":"class","full_name":"Onyx::HTTP::Router::RouteNotFoundError","name":"RouteNotFoundError","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/onyxframework/http/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/router.cr","line_number":159,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Router","kind":"class","full_name":"Onyx::HTTP::Router","name":"Router"},"doc":"Raised if route is not found for this request. Should be rescued in the stack,\npresumably by `Rescuers::RouteNotFound`.","summary":"<p>Raised if route is not found for this request.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":"The request method.","summary":"<p>The request method.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L163","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@method"}},{"id":"path:String-instance-method","html_id":"path:String-instance-method","name":"path","doc":"The request path.","summary":"<p>The request path.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/router.cr#L166","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@path"}}],"macros":[],"types":[]}]},{"html_id":"github.com/onyxframework/http/Onyx/HTTP/Server","path":"Onyx/HTTP/Server.html","kind":"class","full_name":"Onyx::HTTP::Server","name":"Server","abstract":false,"superclass":{"html_id":"github.com/onyxframework/http/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},"ancestors":[{"html_id":"github.com/onyxframework/http/HTTP/Server","kind":"class","full_name":"HTTP::Server","name":"Server"},{"html_id":"github.com/onyxframework/http/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/onyxframework/http/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"onyx-http/server.cr","line_number":16,"url":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr"}],"repository_name":"github.com/onyxframework/http","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/onyxframework/http/Onyx/HTTP","kind":"module","full_name":"Onyx::HTTP","name":"HTTP"},"doc":"The Onyx HTTP server. Basically it is just a wrapper around default `::HTTP::Server`,\nwhich logs server start and stop events.\n\n```\nserver = Onyx::HTTP::Server.new(handlers)\nserver.bind_tcp(\"0.0.0.0\", 5000)\nserver.listen\n\n#   INFO -- : ‚¨õ Onyx::HTTP::Server is listening at http://0.0.0.0:5000\n^C\n#   INFO -- : ‚¨õ Onyx::HTTP::Server is shutting down!\n```","summary":"<p>The Onyx HTTP server.</p>","class_methods":[],"constructors":[{"id":"new(handlers:Enumerable,**nargs,&block:::HTTP::Handler::HandlerProc)-class-method","html_id":"new(handlers:Enumerable,**nargs,&amp;block:::HTTP::Handler::HandlerProc)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Enumerable"}],"args_string":"(handlers : Enumerable, **nargs, &block : ::HTTP::Handler::HandlerProc)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L17","def":{"name":"new","args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Enumerable"}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"::HTTP::Handler::HandlerProc"},"return_type":"","visibility":"Public","body":"middleware = ::HTTP::Server.build_middleware(handlers.to_a.map do |__arg0|\n  __arg0.as(::HTTP::Handler)\nend, block)\nnew(middleware, **nargs)\n"}},{"id":"new(**nargs,&block:::HTTP::Handler::HandlerProc)-class-method","html_id":"new(**nargs,&amp;block:::HTTP::Handler::HandlerProc)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**nargs, &block : ::HTTP::Handler::HandlerProc)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L26","def":{"name":"new","args":[],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":null,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"::HTTP::Handler::HandlerProc"},"return_type":"","visibility":"Public","body":"new(block, **nargs)"}},{"id":"new(*handlers:::HTTP::Handler,**nargs,&block:::HTTP::Handler::HandlerProc)-class-method","html_id":"new(*handlers:::HTTP::Handler,**nargs,&amp;block:::HTTP::Handler::HandlerProc)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"::HTTP::Handler"}],"args_string":"(*handlers : ::HTTP::Handler, **nargs, &block : ::HTTP::Handler::HandlerProc)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L22","def":{"name":"new","args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"::HTTP::Handler"}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":0,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"::HTTP::Handler::HandlerProc"},"return_type":"","visibility":"Public","body":"new(handlers.to_a, **nargs, &block)"}},{"id":"new(handlers:Enumerable,**nargs)-class-method","html_id":"new(handlers:Enumerable,**nargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Enumerable"}],"args_string":"(handlers : Enumerable, **nargs)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L30","def":{"name":"new","args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"Enumerable"}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"middleware = ::HTTP::Server.build_middleware(handlers.to_a.map do |__arg1|\n  __arg1.as(::HTTP::Handler)\nend)\nnew(middleware, **nargs)\n"}},{"id":"new(middleware:::HTTP::Handler|::HTTP::Handler::HandlerProc,*,name:String=&quot;Onyx::HTTP::Server&quot;,logger:::Logger?=::Logger.new(STDOUT),logger_severity:::Logger::Severity=::Logger::INFO)-class-method","html_id":"new(middleware:::HTTP::Handler|::HTTP::Handler::HandlerProc,*,name:String=&amp;quot;Onyx::HTTP::Server&amp;quot;,logger:::Logger?=::Logger.new(STDOUT),logger_severity:::Logger::Severity=::Logger::INFO)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":"::HTTP::Handler | ::HTTP::Handler::HandlerProc"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"name","doc":null,"default_value":"\"Onyx::HTTP::Server\"","external_name":"name","restriction":"String"},{"name":"logger","doc":null,"default_value":"::Logger.new(STDOUT)","external_name":"logger","restriction":"::Logger | ::Nil"},{"name":"logger_severity","doc":null,"default_value":"::Logger::INFO","external_name":"logger_severity","restriction":"::Logger::Severity"}],"args_string":"(middleware : ::HTTP::Handler | ::HTTP::Handler::HandlerProc, *, name : String = <span class=\"s\">&quot;Onyx::HTTP::Server&quot;</span>, logger : ::Logger? = <span class=\"t\">::</span><span class=\"t\">Logger</span>.<span class=\"k\">new</span>(<span class=\"t\">STDOUT</span>), logger_severity : ::Logger::Severity = <span class=\"t\">::</span><span class=\"t\">Logger</span><span class=\"t\">::</span><span class=\"t\">INFO</span>)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L39","def":{"name":"new","args":[{"name":"middleware","doc":null,"default_value":"","external_name":"middleware","restriction":"::HTTP::Handler | ::HTTP::Handler::HandlerProc"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"name","doc":null,"default_value":"\"Onyx::HTTP::Server\"","external_name":"name","restriction":"String"},{"name":"logger","doc":null,"default_value":"::Logger.new(STDOUT)","external_name":"logger","restriction":"::Logger | ::Nil"},{"name":"logger_severity","doc":null,"default_value":"::Logger::INFO","external_name":"logger_severity","restriction":"::Logger::Severity"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(middleware, name: name, logger: logger, logger_severity: logger_severity)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*handlers:::HTTP::Handler,**nargs)-class-method","html_id":"new(*handlers:::HTTP::Handler,**nargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"::HTTP::Handler"}],"args_string":"(*handlers : ::HTTP::Handler, **nargs)","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L35","def":{"name":"new","args":[{"name":"handlers","doc":null,"default_value":"","external_name":"handlers","restriction":"::HTTP::Handler"}],"double_splat":{"name":"nargs","doc":null,"default_value":"","external_name":"nargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(handlers.to_a, **nargs)"}}],"instance_methods":[{"id":"listen-instance-method","html_id":"listen-instance-method","name":"listen","doc":"Start listening for requests. Blocks the runtime, just like the vanilla `::HTTP::Server`.","summary":"<p>Start listening for requests.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/onyxframework/http/blob/f9f44c770f622d69cc80e2e083465017dbba150e/src/onyx-http/server.cr#L50","def":{"name":"listen","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if logger = @logger\n  io = IO::Memory.new\n  ((io << ((\"‚¨õ\".colorize(:green)).mode(:bold))) << \" \") << @name\n  io << (\" is listening at \".colorize(:light_gray))\n  io << (@sockets.join(\", \") do |s|\n    format_address(s)\n  end)\n  logger.log(@logger_severity, io.to_s)\nend\nSignal::INT.trap do\n  if logger = @logger\n    puts(\"\\n\")\n    io = IO::Memory.new\n    ((io << ((\"‚¨õ\".colorize(:red)).mode(:bold))) << \" \") << @name\n    io << (\" is shutting down!\".colorize(:light_gray))\n    logger.not_nil!.log(@logger_severity, io.to_s)\n  end\n  exit\nend\nsuper()\n"}}],"macros":[],"types":[]}]}]}]}})